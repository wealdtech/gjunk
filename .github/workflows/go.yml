name: Go

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
       go get -v -t -d ./...
       if [ -f Gopkg.toml ]; then
         curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
         dep ensure
       fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

    - name: Set env
      id: env
      run: |
       echo '::set-env name=GO111MODULE::on'
       # Release tag comes from the github reference.
       RELEASE_TAG=$(echo ${GITHUB_REF} | sed -e 's!.*/!!')
       echo "::set-env name=RELEASE_TAG::${RELEASE_TAG}"
       echo "::set-output name=RELEASE_TAG::${RELEASE_TAG}"
       # Ensure the release tag has expected format.
       echo ${RELEASE_TAG} | grep -q '^v' || exit 1
       # Release version is same as release tag without leading 'v'.
       RELEASE_VERSION=$(echo ${GITHUB_REF} | sed -e 's!.*/v!!')
       echo "::set-env name=RELEASE_VERSION::${RELEASE_VERSION}"
       echo "::set-output name=RELEASE_VERSION::${RELEASE_VERSION}"

    - name: Tar file
      run: |
       tar zcf gjunk-${RELEASE_VERSION}-linux-amd64.tar.gz gjunk

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: true
        prerelease: true
       
    - name: Upload linux AMD64 tgz file
      id: upload-release-asset-linux-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gjunk-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz
        asset_name: gjunk-${{ env.RELEASE_VERSION }}-linux-amd64.tar.gz
        asset_content_type: application/gzip
